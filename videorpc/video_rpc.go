// Code generated by goctl. DO NOT EDIT!
// Source: video.proto

package videorpc

import (
	"context"

	"douyin-video/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DouyinFeedRequest           = pb.DouyinFeedRequest
	DouyinFeedResponse          = pb.DouyinFeedResponse
	DouyinPublishActionRequest  = pb.DouyinPublishActionRequest
	DouyinPublishActionResponse = pb.DouyinPublishActionResponse
	DouyinPublishListRequest    = pb.DouyinPublishListRequest
	DouyinPublishListResponse   = pb.DouyinPublishListResponse
	User                        = pb.User
	Video                       = pb.Video

	VideoRpc interface {
		Feed(ctx context.Context, in *DouyinFeedRequest, opts ...grpc.CallOption) (*DouyinFeedResponse, error)
		PublishAction(ctx context.Context, in *DouyinPublishActionRequest, opts ...grpc.CallOption) (*DouyinPublishActionResponse, error)
		PublishList(ctx context.Context, in *DouyinPublishListRequest, opts ...grpc.CallOption) (*DouyinPublishListResponse, error)
	}

	defaultVideoRpc struct {
		cli zrpc.Client
	}
)

func NewVideoRpc(cli zrpc.Client) VideoRpc {
	return &defaultVideoRpc{
		cli: cli,
	}
}

func (m *defaultVideoRpc) Feed(ctx context.Context, in *DouyinFeedRequest, opts ...grpc.CallOption) (*DouyinFeedResponse, error) {
	client := pb.NewVideoRpcClient(m.cli.Conn())
	return client.Feed(ctx, in, opts...)
}

func (m *defaultVideoRpc) PublishAction(ctx context.Context, in *DouyinPublishActionRequest, opts ...grpc.CallOption) (*DouyinPublishActionResponse, error) {
	client := pb.NewVideoRpcClient(m.cli.Conn())
	return client.PublishAction(ctx, in, opts...)
}

func (m *defaultVideoRpc) PublishList(ctx context.Context, in *DouyinPublishListRequest, opts ...grpc.CallOption) (*DouyinPublishListResponse, error) {
	client := pb.NewVideoRpcClient(m.cli.Conn())
	return client.PublishList(ctx, in, opts...)
}
